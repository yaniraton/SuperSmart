plugins {
    alias(libs.plugins.androidApplication)
    id 'com.google.gms.google-services'
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

android {
    namespace 'com.yanir.supersmart'
    compileSdk 34

    defaultConfig {
        applicationId "com.yanir.supersmart"
        minSdk 28
        targetSdk 34
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "Gemini_API_Key", "\"" + (project.properties['Gemini_API_Key'] ?: "AIzaSyCX19pWvv2geVs1kaakxAKU8dVQiIFhEuQ") + "\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        buildConfig true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.firebase.database
    implementation libs.firebase.functions
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    implementation 'com.google.mlkit:barcode-scanning:17.3.0'

    def camerax_version = "1.2.2"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"

    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    implementation platform('com.google.firebase:firebase-bom:33.7.0')
    implementation("com.google.firebase:firebase-auth")
    implementation("com.google.firebase:firebase-storage")
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0' // <-- THIS IS REQUIRED
    implementation 'com.firebaseui:firebase-ui-storage:8.0.0'
    implementation 'com.google.ai.client.generativeai:generativeai:0.9.0'
}